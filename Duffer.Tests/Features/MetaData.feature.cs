// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Duffer.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("\'MetaData\' nodes")]
    public partial class MetaDataNodesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MetaData.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "\'MetaData\' nodes", "In order to create PDF files with \'attributes\'\r\nI want to be able to write out Me" +
                    "ta_Data with some node types", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("scene with basic model meta data")]
        public virtual void SceneWithBasicModelMetaData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("scene with basic model meta data", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I have a new current scene", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("the current scene contains a model named \"Box01\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("the model named \"Box01\" has a parent called \"Parent1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("the model named \"Box01\" has a resource called \"BoxModel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("the parent named \"Parent1\" has an identity transform matrix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "value"});
            table1.AddRow(new string[] {
                        "aKey",
                        "aValue"});
#line 11
 testRunner.And("the metadata for the model named \"Box01\" has the following entries", ((string)(null)), table1, "And ");
#line 14
 testRunner.When("I export the current scene to a file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 15
 testRunner.Then("the contents of the current file should be", @"FILE_FORMAT ""IDTF""
FORMAT_VERSION 100

NODE ""MODEL"" {
	NODE_NAME ""Box01""
	PARENT_LIST {
		PARENT_COUNT 1
		PARENT 0 {
			PARENT_NAME ""Parent1""
			PARENT_TM {
				1.000000 0.000000 0.000000 0.000000
				0.000000 1.000000 0.000000 0.000000
				0.000000 0.000000 1.000000 0.000000
				0.000000 0.000000 0.000000 1.000000
			}
		}
	}
	RESOURCE_NAME ""BoxModel""
	META_DATA {
		META_DATA_COUNT 1
		META_DATA 0 {
			META_DATA_ATTRIBUTE ""STRING""
			META_DATA_KEY ""aKey""
			META_DATA_VALUE ""aValue""
		}
	}
}
", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("scene with RHAdobeMeta model meta data")]
        public virtual void SceneWithRHAdobeMetaModelMetaData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("scene with RHAdobeMeta model meta data", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
 testRunner.Given("I have a new current scene", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.And("the current scene contains a model named \"Box01\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("the model named \"Box01\" has a parent called \"Parent1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("the model named \"Box01\" has a resource called \"BoxModel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("the parent named \"Parent1\" has an identity transform matrix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "value"});
            table2.AddRow(new string[] {
                        "Area",
                        "377.092"});
            table2.AddRow(new string[] {
                        "Density",
                        "0.036"});
#line 53
 testRunner.And("the metadata for the model named \"Box01\" has a RHAdobeMeta entry with the followi" +
                    "ng values", ((string)(null)), table2, "And ");
#line 57
 testRunner.When("I export the current scene to a file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 58
 testRunner.Then("the contents of the current file should be", @"FILE_FORMAT ""IDTF""
FORMAT_VERSION 100

NODE ""MODEL"" {
	NODE_NAME ""Box01""
	PARENT_LIST {
		PARENT_COUNT 1
		PARENT 0 {
			PARENT_NAME ""Parent1""
			PARENT_TM {
				1.000000 0.000000 0.000000 0.000000
				0.000000 1.000000 0.000000 0.000000
				0.000000 0.000000 1.000000 0.000000
				0.000000 0.000000 0.000000 1.000000
			}
		}
	}
	RESOURCE_NAME ""BoxModel""
	META_DATA {
		META_DATA_COUNT 1
		META_DATA 0 {
			META_DATA_ATTRIBUTE ""STRING""
			META_DATA_KEY ""RHAdobeMeta""
			META_DATA_VALUE ""<namespace name=\""24578\""> <item name=\""Area\"" value=\""377.092\""/> <item name=\""Density\"" value=\""0.036\""/> </namespace>""
		}
	}
}
", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("scene with RHAdobeMeta model meta data and basic metadata")]
        public virtual void SceneWithRHAdobeMetaModelMetaDataAndBasicMetadata()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("scene with RHAdobeMeta model meta data and basic metadata", ((string[])(null)));
#line 90
this.ScenarioSetup(scenarioInfo);
#line 91
 testRunner.Given("I have a new current scene", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
 testRunner.And("the current scene contains a model named \"Box01\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And("the model named \"Box01\" has a parent called \"Parent1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And("the model named \"Box01\" has a resource called \"BoxModel\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And("the parent named \"Parent1\" has an identity transform matrix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "value"});
            table3.AddRow(new string[] {
                        "aKey",
                        "aValue"});
#line 96
 testRunner.And("the metadata for the model named \"Box01\" has the following entries", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "value"});
            table4.AddRow(new string[] {
                        "Area",
                        "377.092"});
            table4.AddRow(new string[] {
                        "Density",
                        "0.036"});
#line 99
 testRunner.And("the metadata for the model named \"Box01\" has a RHAdobeMeta entry with the followi" +
                    "ng values", ((string)(null)), table4, "And ");
#line 103
 testRunner.When("I export the current scene to a file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 104
 testRunner.Then("the contents of the current file should be", @"FILE_FORMAT ""IDTF""
FORMAT_VERSION 100

NODE ""MODEL"" {
	NODE_NAME ""Box01""
	PARENT_LIST {
		PARENT_COUNT 1
		PARENT 0 {
			PARENT_NAME ""Parent1""
			PARENT_TM {
				1.000000 0.000000 0.000000 0.000000
				0.000000 1.000000 0.000000 0.000000
				0.000000 0.000000 1.000000 0.000000
				0.000000 0.000000 0.000000 1.000000
			}
		}
	}
	RESOURCE_NAME ""BoxModel""
	META_DATA {
		META_DATA_COUNT 2
		META_DATA 0 {
			META_DATA_ATTRIBUTE ""STRING""
			META_DATA_KEY ""RHAdobeMeta""
			META_DATA_VALUE ""<namespace name=\""24578\""> <item name=\""Area\"" value=\""377.092\""/> <item name=\""Density\"" value=\""0.036\""/> </namespace>""
		}
		META_DATA 1 {
			META_DATA_ATTRIBUTE ""STRING""
			META_DATA_KEY ""aKey""
			META_DATA_VALUE ""aValue""
		}
	}
}
", ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
